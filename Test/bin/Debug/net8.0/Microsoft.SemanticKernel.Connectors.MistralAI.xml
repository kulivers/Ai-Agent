<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.SemanticKernel.Connectors.MistralAI</name>
    </assembly>
    <members>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionRequest">
            <summary>
            Request for chat completion.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionRequest.#ctor(System.String)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionRequest"/>.
            </summary>
            <param name="model">ID of the model to use.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionRequest.AddTool(Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralTool)">
            <summary>
            Add a tool to the request.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionRequest.AddMessage(Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatMessage)">
            <summary>
            Add a message to the request.
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionResponse">
            <summary>
            Response for chat completion.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType"/> instance with the provided type.
            </summary>
            <param name="type">The label to associate with this <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType"/>.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType.op_Equality(Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType,Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType)">
            <summary>
            Returns a value indicating whether two <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType"/> instances are equivalent, as determined by a
            case-insensitive comparison of their labels.
            </summary>
            <param name="left"> the first <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType"/> instance to compare </param>
            <param name="right"> the second <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType"/> instance to compare </param>
            <returns> true if left and right are both null or have equivalent labels; false otherwise </returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType.op_Inequality(Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType,Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType)">
            <summary>
            Returns a value indicating whether two <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType"/> instances are not equivalent, as determined by a
            case-insensitive comparison of their labels.
            </summary>
            <param name="left"> the first <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType"/> instance to compare </param>
            <param name="right"> the second <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType"/> instance to compare </param>
            <returns> false if left and right are both null or have equivalent labels; true otherwise </returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType.Equals(Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ContentChunkType.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatChoice">
            <summary>
            Choice for chat completion.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatChoice.FinishReason">
            <summary>
            The reason the chat completion was finished.
            Enum: "stop" "length" "model_length" "error" "tool_calls"
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatChoice.IsToolCall">
            <summary>
            Returns true if the finish reason is "tool_calls"
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatChoice.ToolCallCount">
            <summary>
            Returns the number of tool calls
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatChoice.ToolCalls">
            <summary>
            Return the list of tools calls
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatCompletionChoice">
            <summary>
            Mistral chat completion choice.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatCompletionChoice.IsToolCall">
            <summary>
            Returns true if the finish reason is "tool_calls"
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatCompletionChoice.ToolCallCount">
            <summary>
            Returns the number of tool calls
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatCompletionChoice.ToolCalls">
            <summary>
            Return the list of tools calls
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatCompletionChunk">
            <summary>
            Represents a chat completion chunk from Mistral.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatMessage">
            <summary>
            Chat message for MistralAI.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatMessage.#ctor(System.String,System.Object)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralChatMessage"/>.
            </summary>
            <param name="role">If provided must be one of: system, user, assistant</param>
            <param name="content">Content of the chat message</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient">
            <summary>
            The Mistral client.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.ModelProvider">
            <summary>Provider name used for diagnostics.</summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.MaxInflightAutoInvokes">
            <summary>
            The maximum number of auto-invokes that can be in-flight at any given time as part of the current
            asynchronous chain of execution.
            </summary>
            <remarks>
            This is a fail-safe mechanism. If someone accidentally manages to set up execution settings in such a way that
            auto-invocation is invoked recursively, and in particular where a prompt function is able to auto-invoke itself,
            we could end up in an infinite loop. This const is a backstop against that happening. We should never come close
            to this limit, but if we do, auto-invoke will be disabled for the current flow in order to prevent runaway execution.
            With the current setup, the way this could possibly happen is if a prompt function is configured with built-in
            execution settings that opt-in to auto-invocation of everything in the kernel, in which case the invocation of that
            prompt function could advertise itself as a candidate for auto-invocation. We don't want to outright block that,
            if that's something a developer has asked to do (e.g. it might be invoked with different arguments than its parent
            was invoked with), but we do want to limit it. This limit is arbitrary and can be tweaked in the future and/or made
            configurable should need arise.
            </remarks>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.s_inflightAutoInvokes">
            <summary>Tracking <see cref="T:System.Threading.AsyncLocal`1"/> for <see cref="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.MaxInflightAutoInvokes"/>.</summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.s_meter">
            <summary>
            Instance of <see cref="T:System.Diagnostics.Metrics.Meter"/> for metrics.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.s_promptTokensCounter">
            <summary>
            Instance of <see cref="T:System.Diagnostics.Metrics.Counter`1"/> to keep track of the number of prompt tokens used.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.s_completionTokensCounter">
            <summary>
            Instance of <see cref="T:System.Diagnostics.Metrics.Counter`1"/> to keep track of the number of completion tokens used.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.s_totalTokensCounter">
            <summary>
            Instance of <see cref="T:System.Diagnostics.Metrics.Counter`1"/> to keep track of the total number of tokens used.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.LogUsage(Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralUsage)">
            <summary>Log token usage to the logger and metrics.</summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.ValidateChatHistory(Microsoft.SemanticKernel.ChatCompletion.ChatHistory)">
            <summary>
            Messages are required and the first prompt role should be user or system.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.IsRequestableTool(Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionRequest,Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction)">
            <summary>Checks if a tool call is for a function that was defined.</summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.ProcessFunctionResult(System.Object,Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior)">
            <summary>
            Processes the function result.
            </summary>
            <param name="functionResult">The result of the function call.</param>
            <param name="toolCallBehavior">The ToolCallBehavior object containing optional settings like JsonSerializerOptions.TypeInfoResolver.</param>
            <returns>A string representation of the function result.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.OnAutoFunctionInvocationAsync(Microsoft.SemanticKernel.Kernel,Microsoft.SemanticKernel.AutoFunctionInvocationContext,System.Func{Microsoft.SemanticKernel.AutoFunctionInvocationContext,System.Threading.Tasks.Task})">
            <summary>
            Executes auto function invocation filters and/or function itself.
            This method can be moved to <see cref="T:Microsoft.SemanticKernel.Kernel"/> when auto function invocation logic will be extracted to common place.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralClient.InvokeFilterOrFunctionAsync(System.Collections.Generic.IList{Microsoft.SemanticKernel.IAutoFunctionInvocationFilter},System.Func{Microsoft.SemanticKernel.AutoFunctionInvocationContext,System.Threading.Tasks.Task},Microsoft.SemanticKernel.AutoFunctionInvocationContext,System.Int32)">
            <summary>
            This method will execute auto function invocation filters and function recursively.
            If there are no registered filters, just function will be executed.
            If there are registered filters, filter on <paramref name="index"/> position will be executed.
            Second parameter of filter is callback. It can be either filter on <paramref name="index"/> + 1 position or function if there are no remaining filters to execute.
            Function will be always executed as last step after all filters.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralEmbedding">
            <summary>
            Mistral embedding data.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction">
            <summary>
            A function to be used in the chat completion request.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.Name">
            <summary>
            The name of the function to be called.Must be a-z,A-Z,0-9 or contain underscores and dashes, with a maximum length of 64.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.Description">
            <summary>
            The description of the function to help the model determine when and how to invoke it.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.Parameters">
            <summary>
            The function parameters, defined using a JSON Schema object. If omitted, the function is considered to have an empty parameter list.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.Arguments">
            <summary>
            The arguments provided by the model to call the function.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.NameSeparator">
            <summary>Gets the separator used between the plugin name and the function name, if a plugin name is present.</summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.PluginName">
            <summary>Gets the name of the plugin with which the function is associated, if any.</summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.FunctionName">
            <summary>Gets the name of the function.</summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.#ctor(System.String,System.String,Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralParameters)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.#ctor(Microsoft.SemanticKernel.KernelFunctionMetadata)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.#ctor(System.String,System.String)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.AsciiLettersDigitsUnderscoresRegex">
            <remarks>
            Pattern:<br/>
            <code>^[0-9A-Za-z_-]*$</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match a character in the set [-0-9A-Z_a-z] atomically any number of times.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.GetDefaultSchemaForTypelessParameter(System.String)">
            <summary>Gets a <see cref="T:Microsoft.SemanticKernel.KernelJsonSchema"/> for a typeless parameter with the specified description, defaulting to typeof(string)</summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction.s_stringNoDescriptionSchema">
            <summary>
            Cached schema for a string without a description.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralParameters">
            <summary>
            Represents the parameters of a MistralAI function.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralParameters.Type">
            <summary>
            Gets or sets the type of the parameters. This is always "object".
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralParameters.Properties">
            <summary>
            Gets or sets the JSON schema of the properties.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralParameters.Required">
            <summary>
            Gets or sets the list of required properties.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralResponseBase">
            <summary>
            Base class for Mistral response.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralTool">
            <summary>
            A tool to be used in the chat completion request.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralTool.Type">
            <summary>
            The type of the tool. Currently, only function is supported.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralTool.Function">
            <summary>
            The associated function.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralTool.#ctor(System.String,Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralTool"/>.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralToolCall">
            <summary>
            Tool call for chat completion.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralUsage">
            <summary>
            Usage for chat completion.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralUsage.PromptTokens">
            <summary>
            The number of tokens in the provided prompts for the completions request.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralUsage.CompletionTokens">
            <summary>
            The number of tokens generated across all completions emissions.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralUsage.TotalTokens">
            <summary>
            The total number of tokens processed for the completions request and response.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.TextEmbeddingRequest">
            <summary>
            Request for text embedding.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.Client.TextEmbeddingRequest.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String)">
            <summary>
            Construct an instance of <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.TextEmbeddingRequest"/>.
            </summary>
            <param name="model">ID of the model to use.</param>
            <param name="input">The list of strings to embed.</param>
            <param name="encodingFormat">The format of the output data.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.TextEmbeddingResponse">
            <summary>
            Response for text embedding.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPluginCollectionExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.SemanticKernel.IReadOnlyKernelPluginCollection"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPluginCollectionExtensions.TryGetFunctionAndArguments(Microsoft.SemanticKernel.IReadOnlyKernelPluginCollection,Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction,Microsoft.SemanticKernel.KernelFunction@,Microsoft.SemanticKernel.KernelArguments@)">
            <summary>
            Given an <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction"/> object, tries to retrieve the corresponding <see cref="T:Microsoft.SemanticKernel.KernelFunction"/> and populate <see cref="T:Microsoft.SemanticKernel.KernelArguments"/> with its parameters.
            </summary>
            <param name="plugins">The plugins.</param>
            <param name="functionToolCall">The <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.MistralFunction"/> object.</param>
            <param name="function">When this method returns, the function that was retrieved if one with the specified name was found; otherwise, <see langword="null"/></param>
            <param name="arguments">When this method returns, the arguments for the function; otherwise, <see langword="null"/></param>
            <returns><see langword="true"/> if the function was found; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings">
            <summary>
            Mistral Execution Settings.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.Temperature">
            <summary>
            Default: 0.7
            What sampling temperature to use, between 0.0 and 1.0. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.
            </summary>
            <remarks>
            We generally recommend altering this or top_p but not both.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.TopP">
            <summary>
            Default: 1
            Nucleus sampling, where the model considers the results of the tokens with top_p probability mass.So 0.1 means only the tokens comprising the top 10% probability mass are considered.
            </summary>
            <remarks>
            We generally recommend altering this or temperature but not both.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.MaxTokens">
            <summary>
            Default: null
            The maximum number of tokens to generate in the completion.
            </summary>
            <remarks>
            The token count of your prompt plus max_tokens cannot exceed the model's context length.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.SafePrompt">
            <summary>
            Default: false
            Whether to inject a safety prompt before all conversations.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.RandomSeed">
            <summary>
            Default: null
            The seed to use for random sampling. If set, different calls will generate deterministic results.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.ApiVersion">
            <summary>
            The API version to use.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.ToolCallBehavior">
            <summary>
            Gets or sets the behavior for how tool calls are handled.
            </summary>
            <remarks>
            <list type="bullet">
            <item>To disable all tool calling, set the property to null (the default).</item>
            <item>
            To allow the model to request one of any number of functions, set the property to an
            instance returned from <see cref="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.RequiredFunctions(System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.KernelFunction},System.Boolean)"/>, called with
            a list of the functions available.
            </item>
            <item>
            To allow the model to request one of any of the functions in the supplied <see cref="T:Microsoft.SemanticKernel.Kernel"/>,
            set the property to <see cref="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.EnableKernelFunctions"/> if the client should simply
            send the information about the functions and not handle the response in any special manner, or
            <see cref="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.AutoInvokeKernelFunctions"/> if the client should attempt to automatically
            invoke the function and send the result back to the service.
            </item>
            </list>
            For all options where an instance is provided, auto-invoke behavior may be selected. If the service
            sends a request for a function call, if auto-invoke has been requested, the client will attempt to
            resolve that function from the functions available in the <see cref="T:Microsoft.SemanticKernel.Kernel"/>, and if found, rather
            than returning the response back to the caller, it will handle the request automatically, invoking
            the function, and sending back the result. The intermediate messages will be retained in the
            <see cref="T:Microsoft.SemanticKernel.ChatCompletion.ChatHistory"/> if an instance was provided.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.ResponseFormat">
            <summary>
            Gets or sets the response format to use for the completion.
            </summary>
            <remarks>
            An object specifying the format that the model must output.
            Setting to { "type": "json_object" } enables JSON mode, which guarantees the message the model generates is in JSON.
            When using JSON mode you MUST also instruct the model to produce JSON yourself with a system or a user message.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.Stop">
            <summary>
            Gets or sets the stop sequences to use for the completion.
            </summary>
            <remarks>
            Stop generation if this token is detected. Or if one of these tokens is detected when providing an array
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.PresencePenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on whether they appear in the text so far, increasing the
            model's likelihood to talk about new topics.
            </summary>
            <remarks>
            presence_penalty determines how much the model penalizes the repetition of words or phrases.
            A higher presence penalty encourages the model to use a wider variety of words and phrases, making the output more diverse and creative.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.FrequencyPenalty">
            <summary>
            Number between -2.0 and 2.0. Positive values penalize new tokens
            based on their existing frequency in the text so far, decreasing
            the model's likelihood to repeat the same line verbatim.
            </summary>
            <remarks>
            frequency_penalty penalizes the repetition of words based on their frequency in the generated text.
            A higher frequency penalty discourages the model from repeating words that have already appeared frequently in the output, promoting diversity and reducing repetition.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.DocumentImageLimit">
            <summary>
            Limit Image OCR in document
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.DocumentPageLimit">
            <summary>
            Limit Pages upto which OCR will be done
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.Freeze">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.Clone">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.FromExecutionSettings(Microsoft.SemanticKernel.PromptExecutionSettings)">
            <summary>
            Create a new settings object with the values from another settings object.
            </summary>
            <param name="executionSettings">Template configuration</param>
            <returns>An instance of MistralAIPromptExecutionSettings</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior">
            <summary>Represents a behavior for Mistral tool calls.</summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.DefaultMaximumAutoInvokeAttempts">
            <summary>
            The default maximum number of tool-call auto-invokes that can be made in a single request.
            </summary>
            <remarks>
            After this number of iterations as part of a single user request is reached, auto-invocation
            will be disabled (e.g. <see cref="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.AutoInvokeKernelFunctions"/> will behave like <see cref="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.EnableKernelFunctions"/>)).
            This is a safeguard against possible runaway execution if the model routinely re-requests
            the same function over and over. It is currently hardcoded, but in the future it could
            be made configurable by the developer. Other configuration is also possible in the future,
            such as a delegate on the instance that can be invoked upon function call failure (e.g. failure
            to find the requested function, failure to invoke the function, etc.), with behaviors for
            what to do in such a case, e.g. respond to the model telling it to try again. With parallel tool call
            support, where the model can request multiple tools in a single response, it is significantly
            less likely that this limit is reached, as most of the time only a single request is needed.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.EnableKernelFunctions">
            <summary>
            Gets an instance that will provide all of the <see cref="T:Microsoft.SemanticKernel.Kernel"/>'s plugins' function information.
            Function call requests from the model will be propagated back to the caller.
            </summary>
            <remarks>
            If no <see cref="T:Microsoft.SemanticKernel.Kernel"/> is available, no function information will be provided to the model.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.AutoInvokeKernelFunctions">
            <summary>
            Gets an instance that will both provide all of the <see cref="T:Microsoft.SemanticKernel.Kernel"/>'s plugins' function information
            to the model and attempt to automatically handle any function call requests.
            </summary>
            <remarks>
            When successful, tool call requests from the model become an implementation detail, with the service
            handling invoking any requested functions and supplying the results back to the model.
            If no <see cref="T:Microsoft.SemanticKernel.Kernel"/> is available, no function information will be provided to the model.
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.RequiredFunctions(System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.KernelFunction},System.Boolean)">
            <summary>Gets an instance that will provide the specified list of functions to the model.</summary>
            <param name="functions">The functions that should be made available to the model.</param>
            <param name="autoInvoke">true to attempt to automatically handle function call requests; otherwise, false.</param>
            <returns>
            The <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior"/> that may be set into <see cref="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIPromptExecutionSettings.ToolCallBehavior"/>
            to indicate that the specified functions should be made available to the model.
            The model is forced to call a function from the list of functions provided.
            </returns>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.NoKernelFunctions">
            <summary>
            Gets an instance that will both provide all of the <see cref="T:Microsoft.SemanticKernel.Kernel"/>'s plugins' function information
            to the model but not any function call requests.
            </summary>
            <remarks>
            When successful, tool call requests from the model become an implementation detail, with the service
            handling invoking any requested functions and supplying the results back to the model.
            If no <see cref="T:Microsoft.SemanticKernel.Kernel"/> is available, no function information will be provided to the model.
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.#ctor(System.Boolean)">
            <summary>Initializes the instance; prevents external instantiation.</summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.ToolCallResultSerializerOptions">
            <summary>
            Options to control tool call result serialization behavior.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.MaximumUseAttempts">
            <summary>Gets how many requests are part of a single interaction should include this tool in the request.</summary>
            <remarks>
            This should be greater than or equal to <see cref="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.MaximumAutoInvokeAttempts"/>. It defaults to <see cref="F:System.Int32.MaxValue"/>.
            Once this limit is reached, the tools will no longer be included in subsequent retries as part of the operation, e.g.
            if this is 1, the first request will include the tools, but the subsequent response sending back the tool's result
            will not include the tools for further use.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.MaximumAutoInvokeAttempts">
            <summary>Gets how many tool call request/response roundtrips are supported with auto-invocation.</summary>
            <remarks>
            To disable auto invocation, this can be set to 0.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.AllowAnyRequestedKernelFunction">
            <summary>
            Gets whether validation against a specified list is required before allowing the model to request a function from the kernel.
            </summary>
            <value>true if it's ok to invoke any kernel function requested by the model if it's found; false if a request needs to be validated against an allow list.</value>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.ConfigureRequest(Microsoft.SemanticKernel.Kernel,Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionRequest)">
            <summary>Configures the <paramref name="request"/> with any tools this <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior"/> provides.</summary>
            <param name="kernel">The <see cref="T:Microsoft.SemanticKernel.Kernel"/> used for the operation. This can be queried to determine what tools to provide into the <paramref name="request"/>.</param>
            <param name="request">The destination <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.Client.ChatCompletionRequest"/> to configure.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.KernelFunctions">
            <summary>
            Represents a <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior"/> that will provide to the model all available functions from a
            <see cref="T:Microsoft.SemanticKernel.Kernel"/> provided by the client.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.AnyFunction">
            <summary>
            Represents a <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior"/> that provides a specified list of functions to the model.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.AnyFunction.#ctor(System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.KernelFunction},System.Boolean)">
            <summary>
            Represents a <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior"/> that provides a specified list of functions to the model.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.AnyFunction.MaximumUseAttempts">
            <summary>Gets how many requests are part of a single interaction should include this tool in the request.</summary>
            <remarks>
            Unlike <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.KernelFunctions"/>, this must use 1 as the maximum
            use attempts. Otherwise, every call back to the model _requires_ it to invoke the function (as opposed
            to allows it), which means we end up doing the same work over and over and over until the maximum is reached.
            Thus for "requires", we must send the tool information only once.
            </remarks>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior.NoneKernelFunctions">
            <summary>
            Represents a <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIToolCallBehavior"/> that will provide to the model all available functions from a
            <see cref="T:Microsoft.SemanticKernel.Kernel"/> provided by the client and specifies the cool choice "none".
            When tool choice is set to none the model won't call a function and will generate a message instead.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIChatCompletionService">
            <summary>
            Mistral chat completion service.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIChatCompletionService.#ctor(System.String,System.String,System.Uri,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIChatCompletionService"/> class.
            </summary>
            <param name="modelId">The MistralAI modelId for the text generation service.</param>
            <param name="apiKey">API key for accessing the MistralAI service.</param>
            <param name="endpoint">Optional  uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="httpClient">Optional HTTP client to be used for communication with the MistralAI API.</param>
            <param name="loggerFactory">Optional logger factory to be used for logging.</param>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIChatCompletionService.Attributes">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIChatCompletionService.GetChatMessageContentsAsync(Microsoft.SemanticKernel.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.PromptExecutionSettings,Microsoft.SemanticKernel.Kernel,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIChatCompletionService.GetStreamingChatMessageContentsAsync(Microsoft.SemanticKernel.ChatCompletion.ChatHistory,Microsoft.SemanticKernel.PromptExecutionSettings,Microsoft.SemanticKernel.Kernel,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIEmbeddingGenerator">
            <summary>
            Mistral AI embedding generator service.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIEmbeddingGenerator.#ctor(System.String,System.String,System.Uri,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIEmbeddingGenerator"/> class.
            </summary>
            <param name="modelId">The Mistral modelId for the text generation service.</param>
            <param name="apiKey">API key for accessing the MistralAI service.</param>
            <param name="endpoint">Optional uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="httpClient">Optional HTTP client to be used for communication with the MistralAI API.</param>
            <param name="loggerFactory">Optional logger factory to be used for logging.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIEmbeddingGenerator.GenerateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.Extensions.AI.EmbeddingGenerationOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIEmbeddingGenerator.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAIEmbeddingGenerator.GetService(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAITextEmbeddingGenerationService">
            <summary>
            Mistral text embedding service.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAITextEmbeddingGenerationService.#ctor(System.String,System.String,System.Uri,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAITextEmbeddingGenerationService"/> class.
            </summary>
            <param name="modelId">The Mistral modelId for the text generation service.</param>
            <param name="apiKey">API key for accessing the MistralAI service.</param>
            <param name="endpoint">Optional  uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="httpClient">Optional HTTP client to be used for communication with the MistralAI API.</param>
            <param name="loggerFactory">Optional logger factory to be used for logging.</param>
        </member>
        <member name="P:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAITextEmbeddingGenerationService.Attributes">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Connectors.MistralAI.MistralAITextEmbeddingGenerationService.GenerateEmbeddingsAsync(System.Collections.Generic.IList{System.String},Microsoft.SemanticKernel.Kernel,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.MistralAIKernelBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.SemanticKernel.IKernelBuilder"/> class to configure Mistral connectors.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.MistralAIKernelBuilderExtensions.AddMistralChatCompletion(Microsoft.SemanticKernel.IKernelBuilder,System.String,System.String,System.Uri,System.String,System.Net.Http.HttpClient)">
            <summary>
            Adds an Mistral chat completion service with the specified configuration.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.IKernelBuilder"/> instance to augment.</param>
            <param name="modelId">The name of the Mistral modelId.</param>
            <param name="apiKey">The API key required for accessing the Mistral service.</param>
            <param name="endpoint">Optional  uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="serviceId">A local identifier for the given AI service.</param>
            <param name="httpClient">The HttpClient to use with this service.</param>
            <returns>The same instance as <paramref name="builder"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.MistralAIKernelBuilderExtensions.AddMistralTextEmbeddingGeneration(Microsoft.SemanticKernel.IKernelBuilder,System.String,System.String,System.Uri,System.String,System.Net.Http.HttpClient)">
            <summary>
            Adds an Mistral text embedding generation service with the specified configuration.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.IKernelBuilder"/> instance to augment.</param>
            <param name="modelId">The name of theMistral modelId.</param>
            <param name="apiKey">The API key required for accessing the Mistral service.</param>
            <param name="endpoint">Optional  uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="serviceId">A local identifier for the given AI service.</param>
            <param name="httpClient">The HttpClient to use with this service.</param>
            <returns>The same instance as <paramref name="builder"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.MistralAIKernelBuilderExtensions.AddMistralEmbeddingGenerator(Microsoft.SemanticKernel.IKernelBuilder,System.String,System.String,System.Uri,System.String,System.Net.Http.HttpClient)">
            <summary>
            Adds a MistralAI embedding generator service to the kernel.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.SemanticKernel.IKernelBuilder"/> instance to augment.</param>
            <param name="modelId">The name of the MistralAI modelId.</param>
            <param name="apiKey">The API key required for accessing the MistralAI service.</param>
            <param name="endpoint">Optional uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="serviceId">A local identifier for the given AI service.</param>
            <param name="httpClient">The HttpClient to use with this service.</param>
            <returns>The same instance as <paramref name="builder"/>.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.MistralAIServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> interface to configure Mistral connectors.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.MistralAIServiceCollectionExtensions.AddMistralChatCompletion(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String,System.Uri,System.String,System.Net.Http.HttpClient)">
            <summary>
            Adds an Mistral chat completion service with the specified configuration.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance to augment.</param>
            <param name="modelId">The name of the Mistral modelId.</param>
            <param name="apiKey">The API key required for accessing the Mistral service.</param>
            <param name="endpoint">Optional  uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="serviceId">A local identifier for the given AI service.</param>
            <param name="httpClient">The HttpClient to use with this service.</param>
            <returns>The same instance as <paramref name="services"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.MistralAIServiceCollectionExtensions.AddMistralTextEmbeddingGeneration(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String,System.Uri,System.String,System.Net.Http.HttpClient)">
            <summary>
            Adds an Mistral text embedding generation service with the specified configuration.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance to augment.</param>
            <param name="modelId">The name of theMistral modelId.</param>
            <param name="apiKey">The API key required for accessing the Mistral service.</param>
            <param name="endpoint">Optional  uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="serviceId">A local identifier for the given AI service.</param>
            <param name="httpClient">The HttpClient to use with this service.</param>
            <returns>The same instance as <paramref name="services"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ActivityExtensions.StartActivityWithTags(System.Diagnostics.ActivitySource,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}},System.Diagnostics.ActivityKind)">
            <summary>
            Starts an activity with the specified name and tags.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ActivityExtensions.SetTags(System.Diagnostics.Activity,System.ReadOnlySpan{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Adds tags to the activity.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ActivityExtensions.AttachSensitiveDataAsEvent(System.Diagnostics.Activity,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>
            Adds an event to the activity. Should only be used for events that contain sensitive data.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ActivityExtensions.SetError(System.Diagnostics.Activity,System.Exception)">
            <summary>
            Sets the error status and type on the activity.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics">
            <summary>
            Model diagnostics helper class that provides a set of methods to trace model activities with the OTel semantic conventions.
            This class contains experimental features and may change in the future.
            To enable these features, set one of the following switches to true:
                `Microsoft.SemanticKernel.Experimental.GenAI.EnableOTelDiagnostics`
                `Microsoft.SemanticKernel.Experimental.GenAI.EnableOTelDiagnosticsSensitive`
            Or set the following environment variables to true:
               `SEMANTICKERNEL_EXPERIMENTAL_GENAI_ENABLE_OTEL_DIAGNOSTICS`
               `SEMANTICKERNEL_EXPERIMENTAL_GENAI_ENABLE_OTEL_DIAGNOSTICS_SENSITIVE`
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.StartCompletionActivity``1(System.Uri,System.String,System.String,System.String,``0)">
            <summary>
            Start a text completion activity for a given model.
            The activity will be tagged with the a set of attributes specified by the semantic conventions.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.StartCompletionActivity``1(System.Uri,System.String,System.String,Microsoft.SemanticKernel.ChatCompletion.ChatHistory,``0)">
            <summary>
            Start a chat completion activity for a given model.
            The activity will be tagged with the a set of attributes specified by the semantic conventions.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.StartAgentInvocationActivity(System.String,System.String,System.String,Microsoft.SemanticKernel.Kernel,System.Collections.Generic.ICollection{Microsoft.SemanticKernel.ChatMessageContent})">
            <summary>
            Start an agent invocation activity and return the activity.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.SetAgentResponse(System.Diagnostics.Activity,System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.ChatMessageContent})">
            <summary>
            Set the agent response for a given activity.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.EndAgentStreamingResponse(System.Diagnostics.Activity,System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.StreamingChatMessageContent})">
            <summary>
            End the agent streaming response for a given activity.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.SetCompletionResponse(System.Diagnostics.Activity,System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.TextContent},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Set the text completion response for a given activity.
            The activity will be enriched with the response attributes specified by the semantic conventions.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.SetCompletionResponse(System.Diagnostics.Activity,System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.ChatMessageContent},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Set the chat completion response for a given activity.
            The activity will be enriched with the response attributes specified by the semantic conventions.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.EndStreaming(System.Diagnostics.Activity,System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.StreamingKernelContent},System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.FunctionCallContent},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Notify the end of streaming for a given activity.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.SetResponseId(System.Diagnostics.Activity,System.String)">
            <summary>
            Set the response id for a given activity.
            </summary>
            <param name="activity">The activity to set the response id</param>
            <param name="responseId">The response id</param>
            <returns>The activity with the response id set for chaining</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.SetInputTokensUsage(System.Diagnostics.Activity,System.Int32)">
            <summary>
            Set the input tokens usage for a given activity.
            </summary>
            <param name="activity">The activity to set the input tokens usage</param>
            <param name="inputTokens">The number of input tokens used</param>
            <returns>The activity with the input tokens usage set for chaining</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.SetOutputTokensUsage(System.Diagnostics.Activity,System.Int32)">
            <summary>
            Set the output tokens usage for a given activity.
            </summary>
            <param name="activity">The activity to set the output tokens usage</param>
            <param name="outputTokens">The number of output tokens used</param>
            <returns>The activity with the output tokens usage set for chaining</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.IsModelDiagnosticsEnabled">
            <summary>
            Check if model diagnostics is enabled
            Model diagnostics is enabled if either EnableModelDiagnostics or EnableSensitiveEvents is set to true and there are listeners.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.IsSensitiveEventsEnabled">
            <summary>
            Check if sensitive events are enabled.
            Sensitive events are enabled if EnableSensitiveEvents is set to true and there are listeners.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.ToGenAIConventionsFormat(Microsoft.SemanticKernel.ChatMessageContent)">
            <summary>
            Convert a chat message to a JSON object based on the OTel GenAI Semantic Conventions format
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.ToGenAIConventionsFormat(Microsoft.SemanticKernel.ChatCompletion.ChatMessageContentItemCollection)">
            <summary>
            Helper method to convert tool calls to a list of JSON object based on the OTel GenAI Semantic Conventions format
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.ToGenAIConventionsFormat(Microsoft.SemanticKernel.KernelFunctionMetadata)">
            <summary>
            Convert a function metadata to a JSON object based on the OTel GenAI Semantic Conventions format
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.ToGenAIConventionsChoiceFormat(Microsoft.SemanticKernel.ChatMessageContent,System.Int32)">
            <summary>
            Convert a chat model response to a JSON string based on the OTel GenAI Semantic Conventions format
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.ToGenAIConventionsChoiceFormat(Microsoft.SemanticKernel.TextContent,System.Int32)">
            <summary>
            Convert a text model response to a JSON string based on the OTel GenAI Semantic Conventions format
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.SetCompletionResponse``1(System.Diagnostics.Activity,System.Collections.Generic.IEnumerable{``0},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Func{``0,System.Int32,System.String})">
            <summary>
            Set the completion response for a given activity.
            The `formatCompletions` delegate won't be invoked if events are disabled.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.SetCompletionResponse(System.Diagnostics.Activity,System.Collections.Generic.Dictionary{System.Int32,System.Collections.Generic.List{Microsoft.SemanticKernel.StreamingKernelContent}},System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.FunctionCallContent},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Set the streaming completion response for a given activity.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.OrganizeStreamingContent(System.Collections.Generic.IEnumerable{Microsoft.SemanticKernel.StreamingKernelContent})">
            <summary>
            Organize streaming content by choice index
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Diagnostics.ModelDiagnostics.ModelDiagnosticsTags">
            <summary>
            Tags used in model diagnostics
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.KernelVerify.AllowedPluginNameSymbolsRegex">
            <remarks>
            Pattern:<br/>
            <code>^[0-9A-Za-z_]*$</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match a character in the set [0-9A-Z_a-z] atomically any number of times.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.KernelVerify.AllowedFunctionNameSymbolsRegex">
            <remarks>
            Pattern:<br/>
            <code>^[0-9A-Za-z_-]*$</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match a character in the set [-0-9A-Z_a-z] atomically any number of times.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.KernelVerify.ParametersUniqueness(System.Collections.Generic.IReadOnlyList{Microsoft.SemanticKernel.KernelParameterMetadata})">
            <summary>
            Make sure every function parameter name is unique
            </summary>
            <param name="parameters">List of parameters</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Throw">
            <summary>
            Defines static methods used to throw exceptions.
            </summary>
            <remarks>
            The main purpose is to reduce code size, improve performance, and standardize exception
            messages.
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfNull``1(``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the specified argument is <see langword="null"/>.
            </summary>
            <typeparam name="T">Argument type to be checked for <see langword="null"/>.</typeparam>
            <param name="argument">Object to be checked for <see langword="null"/>.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfNullOrMemberNull``2(``0,``1,System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the specified argument is <see langword="null"/>,
            or <see cref="T:System.ArgumentException" /> if the specified member is <see langword="null"/>.
            </summary>
            <typeparam name="TParameter">Argument type to be checked for <see langword="null"/>.</typeparam>
            <typeparam name="TMember">Member type to be checked for <see langword="null"/>.</typeparam>
            <param name="argument">Argument to be checked for <see langword="null"/>.</param>
            <param name="member">Object member to be checked for <see langword="null"/>.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <param name="memberName">The name of the member.</param>
            <returns>The original value of <paramref name="member"/>.</returns>
            <example>
            <code language="csharp">
            Throws.IfNullOrMemberNull(myObject, myObject?.MyProperty)
            </code>
            </example>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfMemberNull``2(``0,``1,System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentException" /> if the specified member is <see langword="null"/>.
            </summary>
            <typeparam name="TParameter">Argument type.</typeparam>
            <typeparam name="TMember">Member type to be checked for <see langword="null"/>.</typeparam>
            <param name="argument">Argument to which member belongs.</param>
            <param name="member">Object member to be checked for <see langword="null"/>.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <param name="memberName">The name of the member.</param>
            <returns>The original value of <paramref name="member"/>.</returns>
            <example>
            <code language="csharp">
            Throws.IfMemberNull(myObject, myObject.MyProperty)
            </code>
            </example>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfNullOrWhitespace(System.String,System.String)">
            <summary>
            Throws either an <see cref="T:System.ArgumentNullException"/> or an <see cref="T:System.ArgumentException"/>
            if the specified string is <see langword="null"/> or whitespace respectively.
            </summary>
            <param name="argument">String to be checked for <see langword="null"/> or whitespace.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfNullOrEmpty(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the string is <see langword="null"/>,
            or <see cref="T:System.ArgumentException"/> if it is empty.
            </summary>
            <param name="argument">String to be checked for <see langword="null"/> or empty.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfBufferTooSmall(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/> if the argument's buffer size is less than the required buffer size.
            </summary>
            <param name="bufferSize">The actual buffer size.</param>
            <param name="requiredSize">The required buffer size.</param>
            <param name="paramName">The name of the parameter to be checked.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfOutOfRange``1(``0,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the enum value is not valid.
            </summary>
            <param name="argument">The argument to evaluate.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <typeparam name="T">The type of the enumeration.</typeparam>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/> if the collection is <see langword="null"/>,
            or <see cref="T:System.ArgumentException"/> if it is empty.
            </summary>
            <param name="argument">The collection to evaluate.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <typeparam name="T">The type of objects in the collection.</typeparam>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.ArgumentNullException(System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.ArgumentNullException(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentNullException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.ArgumentOutOfRangeException(System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.ArgumentOutOfRangeException(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.ArgumentOutOfRangeException(System.String,System.Object,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="actualValue">The value of the argument that caused this exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.ArgumentException(System.String,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.ArgumentException(System.String,System.String,System.Exception)">
            <summary>
            Throws an <see cref="T:System.ArgumentException"/>.
            </summary>
            <param name="paramName">The name of the parameter that caused the exception.</param>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
            <remarks>
            If the <paramref name="innerException"/> is not a <see langword="null"/>, the current exception is raised in a catch
            block that handles the inner exception.
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.InvalidOperationException(System.String)">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.InvalidOperationException(System.String,System.Exception)">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <param name="message">A message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThan(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>  if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThan(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThanOrEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThanOrEqual(System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfOutOfRange(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfZero(System.Int32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThan(System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>  if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThan(System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThanOrEqual(System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThanOrEqual(System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfOutOfRange(System.UInt32,System.UInt32,System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfZero(System.UInt32,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThan(System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>  if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThan(System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThanOrEqual(System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThanOrEqual(System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfOutOfRange(System.Int64,System.Int64,System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfZero(System.Int64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThan(System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/>  if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThan(System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThanOrEqual(System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThanOrEqual(System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfOutOfRange(System.UInt64,System.UInt64,System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfZero(System.UInt64,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThan(System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less than min.
            </summary>
            <param name="argument">Number to be expected being less than min.</param>
            <param name="min">The number that must be less than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThan(System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater than max.
            </summary>
            <param name="argument">Number to be expected being greater than max.</param>
            <param name="max">The number that must be greater than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfLessThanOrEqual(System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is less or equal than min.
            </summary>
            <param name="argument">Number to be expected being less or equal than min.</param>
            <param name="min">The number that must be less or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfGreaterThanOrEqual(System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is greater or equal than max.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="max">The number that must be greater or equal than the argument.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfOutOfRange(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is not in the specified range.
            </summary>
            <param name="argument">Number to be expected being greater or equal than max.</param>
            <param name="min">The lower bound of the allowed range of argument values.</param>
            <param name="max">The upper bound of the allowed range of argument values.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Throw.IfZero(System.Double,System.String)">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if the specified number is equal to 0.
            </summary>
            <param name="argument">Number to be expected being not equal to zero.</param>
            <param name="paramName">The name of the parameter being checked.</param>
            <returns>The original value of <paramref name="argument"/>.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Verify.FilenameRegex">
            <remarks>
            Pattern:<br/>
            <code>^[^.]+\\.[^.]+$</code><br/>
            Explanation:<br/>
            <code>
            ○ Match if at the beginning of the string.<br/>
            ○ Match a character other than '.' atomically at least once.<br/>
            ○ Match '.'.<br/>
            ○ Match a character other than '.' greedily at least once.<br/>
            ○ Match if at the end of the string or if before an ending newline.<br/>
            </code>
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Verify.NotNull(System.Object,System.String)">
            <summary>
            Equivalent of ArgumentNullException.ThrowIfNull
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Verify.ValidHostnameSegment(System.String,System.String)">
            <summary>
            Validates that a hostname segment string is safe for use as a URL segment, preventing URL injection.
            </summary>
            <param name="hostNameSegment">The hostname segment string to validate (e.g., 'us-east1', 'europe-west4')</param>
            <param name="paramName">Optional parameter name for the exception</param>
            <exception cref="T:System.ArgumentException">Thrown when the location contains invalid characters or patterns</exception>
        </member>
        <member name="T:Microsoft.SemanticKernel.FunctionName">
            <summary>
            Represents a function name.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.FunctionName.PluginName">
            <summary>
            The plugin name.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.FunctionName.Name">
            <summary>
            The function name.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.FunctionName.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.FunctionName"/> class.
            </summary>
            <param name="name">The function name.</param>
            <param name="pluginName">The plugin name.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.FunctionName.ToFullyQualifiedName(System.String,System.String,System.String)">
            <summary>
            Gets the fully-qualified name of the function.
            </summary>
            <param name="functionName">The function name.</param>
            <param name="pluginName">The plugin name.</param>
            <param name="functionNameSeparator">The function name separator.</param>
            <returns>Fully-qualified name of the function.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.FunctionName.Parse(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.SemanticKernel.FunctionName"/> class.
            </summary>
            <param name="fullyQualifiedName">Fully-qualified name of the function.</param>
            <param name="functionNameSeparator">The function name separator.</param>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpClientExtensions.SendWithSuccessCheckAsync(System.Net.Http.HttpClient,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request using the provided <see cref="T:System.Net.Http.HttpClient"/> instance and checks for a successful response.
            If the response is not successful, it logs an error and throws an <see cref="T:Microsoft.SemanticKernel.HttpOperationException"/>.
            </summary>
            <param name="client">The <see cref="T:System.Net.Http.HttpClient"/> instance to use for sending the request.</param>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to send.</param>
            <param name="completionOption">Indicates if HttpClient operations should be considered completed either as soon as a response is available,
            or after reading the entire response message including the content.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for canceling the request.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> representing the response.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpClientExtensions.SendWithSuccessCheckAsync(System.Net.Http.HttpClient,System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
            <summary>
            Sends an HTTP request using the provided <see cref="T:System.Net.Http.HttpClient"/> instance and checks for a successful response.
            If the response is not successful, it logs an error and throws an <see cref="T:Microsoft.SemanticKernel.HttpOperationException"/>.
            </summary>
            <param name="client">The <see cref="T:System.Net.Http.HttpClient"/> instance to use for sending the request.</param>
            <param name="request">The <see cref="T:System.Net.Http.HttpRequestMessage"/> to send.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> for canceling the request.</param>
            <returns>The <see cref="T:System.Net.Http.HttpResponseMessage"/> representing the response.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Http.HttpClientProvider">
            <summary>
            Provides functionality for retrieving instances of HttpClient.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpClientProvider.GetHttpClient">
            <summary>
            Retrieves an instance of HttpClient.
            </summary>
            <returns>An instance of HttpClient.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpClientProvider.GetHttpClient(System.Net.Http.HttpClient)">
            <summary>
            Retrieves an instance of HttpClient.
            </summary>
            <returns>An instance of HttpClient.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpClientProvider.GetHttpClient(System.IServiceProvider)">
            <summary>
            Retrieves an instance of HttpClient.
            </summary>
            <returns>An instance of HttpClient.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpClientProvider.GetHttpClient(System.Net.Http.HttpClient,System.IServiceProvider)">
            <summary>
            Retrieves an instance of HttpClient.
            </summary>
            <returns>An instance of HttpClient.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Http.HttpClientProvider.NonDisposableHttpClientHandler">
            <summary>
            Represents a singleton implementation of <see cref="T:System.Net.Http.HttpClientHandler"/> that is not disposable.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpClientProvider.NonDisposableHttpClientHandler.#ctor">
            <summary>
            Private constructor to prevent direct instantiation of the class.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Http.HttpClientProvider.NonDisposableHttpClientHandler.Instance">
            <summary>
            Gets the singleton instance of <see cref="T:Microsoft.SemanticKernel.Http.HttpClientProvider.NonDisposableHttpClientHandler"/>.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpClientProvider.NonDisposableHttpClientHandler.Dispose(System.Boolean)">
            <summary>
            Disposes the underlying resources held by the <see cref="T:Microsoft.SemanticKernel.Http.HttpClientProvider.NonDisposableHttpClientHandler"/>.
            This implementation does nothing to prevent unintended disposal, as it may affect all references.
            </summary>
            <param name="disposing">True if called from <see cref="M:Microsoft.SemanticKernel.Http.HttpClientProvider.NonDisposableHttpClientHandler.Dispose(System.Boolean)"/>, false if called from a finalizer.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Http.HttpContentExtensions">
            <summary>
            Provides extension methods for working with HTTP content in a way that translates HttpRequestExceptions into HttpOperationExceptions.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpContentExtensions.ReadAsStringWithExceptionMappingAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Reads the content of the HTTP response as a string and translates any HttpRequestException into an HttpOperationException.
            </summary>
            <param name="httpContent">The HTTP content to read.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A string representation of the HTTP content.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpContentExtensions.ReadAsStreamAndTranslateExceptionAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Reads the content of the HTTP response as a stream and translates any HttpRequestException into an HttpOperationException.
            </summary>
            <param name="httpContent">The HTTP content to read.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A stream representing the HTTP content.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpContentExtensions.ReadAsByteArrayAndTranslateExceptionAsync(System.Net.Http.HttpContent,System.Threading.CancellationToken)">
            <summary>
            Reads the content of the HTTP response as a byte array and translates any HttpRequestException into an HttpOperationException.
            </summary>
            <param name="httpContent">The HTTP content to read.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A byte array representing the HTTP content.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Http.HttpHeaderConstant">
            <summary>Provides HTTP header names and values for common purposes.</summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Http.HttpHeaderConstant.Names.SemanticKernelVersion">
            <summary>HTTP header name to use to include the Semantic Kernel package version in all HTTP requests issued by Semantic Kernel.</summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Http.HttpHeaderConstant.Names.UserAgent">
            <summary>HTTP User-Agent header name.</summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Http.HttpHeaderConstant.Values.UserAgent">
            <summary>User agent string to use for all HTTP requests issued by Semantic Kernel.</summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpHeaderConstant.Values.GetAssemblyVersion(System.Type)">
            <summary>
            Gets the version of the <see cref="T:System.Reflection.Assembly"/> in which the specific type is declared.
            </summary>
            <param name="type">Type for which the assembly version is returned.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Http.HttpResponseStream">
            <summary>
            Associate a response stream with its parent response for parity in life-cycle management.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Http.HttpResponseStream.#ctor(System.IO.Stream,System.Net.Http.HttpResponseMessage)">
            <summary>
            Associate a response stream with its parent response for parity in life-cycle management.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Freezable">
            <summary>
            Represents a freezable object.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Freezable.Freeze">
            <summary>
            Makes the current instance unmodifiable.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Freezable.ThrowIfFrozen">
            <summary>
            Throws an <see cref="T:System.InvalidOperationException"/> if the object is frozen.
            </summary>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Microsoft.SemanticKernel.AppContextSwitchHelper">
            <summary>
            Helper class to get app context switch value
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.AppContextSwitchHelper.GetConfigValue(System.String,System.String)">
            <summary>
            Returns the value of the specified app switch or environment variable if it is set.
            If the switch or environment variable is not set, return false.
            The app switch value takes precedence over the environment variable.
            </summary>
            <param name="appContextSwitchName">The name of the app switch.</param>
            <param name="envVarName">The name of the environment variable.</param>
            <returns>The value of the app switch or environment variable if it is set; otherwise, false.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.IListExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds a range of elements from the specified <see cref="T:System.Collections.Generic.IEnumerable`1"/> source to the target <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <typeparam name="T">The type of elements in the list.</typeparam>
            <param name="target">The target <see cref="T:System.Collections.Generic.IList`1"/> to add elements to.</param>
            <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1"/> containing elements to add to the target <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.InternalTypeConverter">
            <summary>
            Provides internal utility methods for converting types to strings with consideration for CultureInfo.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.InternalTypeConverter.ConvertToString(System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the given object value to a string representation using the appropriate CultureInfo.
            </summary>
            <param name="value">The object to convert.</param>
            <param name="culture">The CultureInfo to consider during conversion.</param>
            <returns>A string representation of the object value, considering the specified CultureInfo.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.InternalTypeConverter.GetTypeToStringConverterDelegate(System.Type)">
            <summary>
            Retrieves a type-to-string converter delegate for the specified source type.
            </summary>
            <param name="sourceType">The source Type for which to retrieve the type-to-string converter delegate.</param>
            <returns>A Func delegate for converting the source type to a string, considering CultureInfo, or null if no suitable converter is found.</returns>
        </member>
        <member name="F:Microsoft.SemanticKernel.InternalTypeConverter.s_converters">
            <summary>Converter functions for converting types to strings.</summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.NonNullCollection`1">
            <summary>
            Provides a collection of non-null items.
            </summary>
        </member>
        <member name="F:Microsoft.SemanticKernel.NonNullCollection`1._items">
            <summary>
            The underlying list of items.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.NonNullCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.SemanticKernel.NonNullCollection`1"/> class.
            </summary>
            <param name="items">The initial collection of items to populate this collection.</param>
        </member>
        <member name="P:Microsoft.SemanticKernel.NonNullCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index in the collection.
            </summary>
            <param name="index">The index of the item to get or set.</param>
            <returns>The item at the specified index.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="value"/> is null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index"/> was not valid for this collection.</exception>
        </member>
        <member name="P:Microsoft.SemanticKernel.NonNullCollection`1.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.Add(`0)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The item to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is null.</exception>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.Contains(`0)">
            <summary>
            Determines whether an item is in the collection.
            </summary>
            <param name="item">The item to locate.</param>
            <returns>True if the item is found in the collection; otherwise, false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is null.</exception>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies all of the items in the collection to an array, starting at the specified destination array index.
            </summary>
            <param name="array">The destination array into which the items should be copied.</param>
            <param name="arrayIndex">The zero-based index into <paramref name="array"/> at which copying should begin.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The number of items in the collection is greater than the available space from <paramref name="arrayIndex"/> to the end of <paramref name="array"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.IndexOf(`0)">
            <summary>
            Searches for the specified item and returns the index of the first occurrence.
            </summary>
            <param name="item">The item to locate.</param>
            <returns>The index of the first found occurrence of the specified item; -1 if the item could not be found.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">The index at which the item should be inserted.</param>
            <param name="item">The item to insert.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is null.</exception>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of the specified item from the collection.
            </summary>
            <param name="item">The item to remove from the collection.</param>
            <returns>True if the item was successfully removed; false if it wasn't located in the collection.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="item"/> is null.</exception>
        </member>
        <member name="M:Microsoft.SemanticKernel.NonNullCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the item at the specified index from the collection.
            </summary>
            <param name="index">The index of the item to remove.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.TypeConverterFactory">
            <summary>
            Factory for creating TypeConverter instances based on a provided type.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.TypeConverterFactory.GetTypeConverter(System.Type)">
            <summary>
            Returns a TypeConverter instance for the specified type.
            </summary>
            <param name="type">The Type of the object to convert.</param>
            <returns>A TypeConverter instance if a suitable converter is found, otherwise null.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.BoolJsonConverter">
            <summary>
            Deserializes a bool from a string. This is useful when deserializing a <see cref="T:Microsoft.SemanticKernel.PromptExecutionSettings"/> instance that contains bool properties.
            Serializing a <see cref="T:Microsoft.SemanticKernel.PromptExecutionSettings"/> instance without this converter will throw a 'System.Text.Json.JsonException : The JSON value could not be converted to System.Nullable'
            if there are any bool properties.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.BoolJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.BoolJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Boolean,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.DataUriParser">
            <summary>
            Data Uri Scheme Parser based on RFC 2397.
            https://datatracker.ietf.org/doc/html/rfc2397
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.DataUriParser.IsBase64String(System.String)">
            <summary>
            Extension method to test whether the value is a base64 string
            </summary>
            <param name="value">Value to test</param>
            <returns>Boolean value, true if the string is base64, otherwise false</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.DataUriParser.DataUri">
            <summary>
            Represents the data URI parts.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.DataUriParser.DataUri.MimeType">
            <summary>
            The mime type of the data.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.DataUriParser.DataUri.Parameters">
            <summary>
            The optional parameters of the data.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.DataUriParser.DataUri.DataFormat">
            <summary>
            The optional format of the data. Most common is "base64".
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.DataUriParser.DataUri.Data">
            <summary>
            The data content.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.ExceptionJsonConverter">
            <summary>
            Serializes an exception as a string. This is useful when serializing an instance of an exception directly or indirectly via serializing an instance that
            references an exception. For example, when serializing chat history that contains FunctionCallContent or FunctionResultContent items referencing an exception.
            Serializing an exception without this converter will throw a System.NotSupportedException: Serialization and deserialization of System.Reflection.MethodBase instances is not supported. Path: $.Items.Exception.TargetSite.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.ExceptionJsonConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.ExceptionJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.ExceptionJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.JsonOptionsCache">
            <summary>Caches common configurations of <see cref="T:System.Text.Json.JsonSerializerOptions"/>.</summary>\
            <remarks>
            All of the instances include a converter for <see cref="T:System.ReadOnlyMemory`1"/>.
            Once the System.Text.Json package is upgraded to 8.0+, this will no longer be
            necessary and the actual default can be used.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.JsonOptionsCache.Default">
            <summary>
            Cached <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance for reading and writing JSON using the default settings.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.JsonOptionsCache.WriteIndented">
            <summary>
            Cached <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance for writing JSON with indentation.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.JsonOptionsCache.ReadPermissive">
            <summary>
            Cached <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance for reading JSON in a permissive way,
            including support for trailing commas, case-insensitive property names, and comments.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.JsonOptionsCache.ChatHistory">
            <summary>
            Gets the <see cref="T:System.Text.Json.JsonSerializerOptions"/> configured for serializing chat history data.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.OptionalBoolJsonConverter">
            <summary>
            Deserializes a bool from a string. This is useful when deserializing a <see cref="T:Microsoft.SemanticKernel.PromptExecutionSettings"/> instance that contains bool properties.
            Serializing a <see cref="T:Microsoft.SemanticKernel.PromptExecutionSettings"/> instance without this converter will throw a 'System.Text.Json.JsonException : The JSON value could not be converted to System.Nullable'
            if there are any bool properties.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.OptionalBoolJsonConverter.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.OptionalBoolJsonConverter.Write(System.Text.Json.Utf8JsonWriter,System.Nullable{System.Boolean},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.SseData">
            <summary>
            Represents a single Server-Sent Events (SSE) data object.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseData.EventName">
            <summary>
            The name of the sse event.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseData.DataType">
            <summary>
            Represents the type of data parsed from SSE message.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseData.Data">
            <summary>
            Represents the data parsed from SSE message.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseData.#ctor(System.String,System.Object)">
            <summary>
            Represents a single Server-Sent Events (SSE) data object.
            </summary>
            <param name="eventName">The name of the sse event.</param>
            <param name="data">The data parsed from SSE message.</param>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.SseJsonParser">
            <summary>
            Internal class for parsing Server-Sent Events (SSE) data from a stream.
            </summary>
            <remarks>
            This is specialized parser for Server-Sent Events (SSE) data that is formatted as JSON.<br/>
            If you need to parse non-structured json streaming data, use <see cref="T:Microsoft.SemanticKernel.Text.StreamJsonParser"/> instead.<br/>
            <a href="https://html.spec.whatwg.org/multipage/server-sent-events.html#parsing-an-event-stream">SSE specification</a><br/>
            This class is thread-safe.
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseJsonParser.ParseAsync(System.IO.Stream,System.Func{Microsoft.SemanticKernel.Text.SseLine,Microsoft.SemanticKernel.Text.SseData},System.Threading.CancellationToken)">
            <summary>
            Parses Server-Sent Events (SSE) data asynchronously from a stream.
            </summary>
            <param name="stream">The stream containing the SSE data.</param>
            <param name="parser">The function to parse each <see cref="T:Microsoft.SemanticKernel.Text.SseLine"/> into an <see cref="T:Microsoft.SemanticKernel.Text.SseData"/> object.</param>
            <param name="cancellationToken">A cancellation token to stop the parsing process.</param>
            <remarks><paramref name="stream"/> will be disposed immediately once enumeration is complete.</remarks>
            <returns>An asynchronous enumerable sequence of <see cref="T:Microsoft.SemanticKernel.Text.SseData"/> objects.</returns>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseJsonParser.ParseAsync``1(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Parses Server-Sent Events (SSE) data asynchronously from a stream and deserializes the data into the specified type.
            </summary>
            <typeparam name="T">The type to deserialize the data into.</typeparam>
            <param name="stream">The stream containing the SSE data.</param>
            <param name="cancellationToken">A cancellation token to stop the parsing process.</param>
            <returns>An asynchronous enumerable sequence of deserialized objects of type <typeparamref name="T"/>.</returns>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.SseLine">
            <summary>
            Represents a line of a Server-Sent Events (SSE) stream.
            </summary>
            <remarks>
            <a href="https://html.spec.whatwg.org/multipage/server-sent-events.html#parsing-an-event-stream">SSE specification</a>
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseLine.Empty">
            <summary>
            Represents an empty SSE line.
            </summary>
            <remarks>
            The <see cref="P:Microsoft.SemanticKernel.Text.SseLine.Empty"/> property is a static instance of the <see cref="T:Microsoft.SemanticKernel.Text.SseLine"/> struct.
            </remarks>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseLine.EventName">
            <summary>
            The name of the last event for the Server-Sent Events (SSE) line.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseLine.IsEmpty">
            <summary>
            Determines whether the SseLine is empty.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseLine.IsValueEmpty">
            <summary>
            Gets a value indicating whether the value of the SseLine is empty.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseLine.IsComment">
            <summary>
            Determines whether the SseLine is comment line.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseLine.FieldName">
            <summary>
            Represents a field name in a Server-Sent Events (SSE) line.
            </summary>
        </member>
        <member name="P:Microsoft.SemanticKernel.Text.SseLine.FieldValue">
            <summary>
            Represents a field value in Server-Sent Events (SSE) format.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseLine.ToString">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseLine.Equals(Microsoft.SemanticKernel.Text.SseLine)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseLine.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseLine.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseLine.op_Equality(Microsoft.SemanticKernel.Text.SseLine,Microsoft.SemanticKernel.Text.SseLine)">
            <summary>
            Defines the equality operator for comparing two instances of the SseLine class.
            </summary>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseLine.op_Inequality(Microsoft.SemanticKernel.Text.SseLine,Microsoft.SemanticKernel.Text.SseLine)">
            <summary>
            Represents the inequality operator for comparing two SseLine objects.
            </summary>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.SseReader">
            <summary>
            Provides a reader for Server-Sent Events (SSE) data.
            </summary>
            <remarks>
            <a href="https://html.spec.whatwg.org/multipage/server-sent-events.html#parsing-an-event-stream">SSE specification</a>
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.SseReader.#ctor(System.IO.Stream)">
            <summary>
            Provides a reader for Server-Sent Events (SSE) data.
            </summary>
            <remarks>
            <a href="https://html.spec.whatwg.org/multipage/server-sent-events.html#parsing-an-event-stream">SSE specification</a>
            </remarks>
        </member>
        <member name="T:Microsoft.SemanticKernel.Text.StreamJsonParser">
            <summary>
            Internal class for parsing a stream of text which contains a series of discrete JSON strings into en enumerable containing each separate JSON string.
            </summary>
            <remarks>
            This is universal parser for parsing stream of text which contains a series of discrete JSON.<br/>
            If you need a specialized SSE parser, use <see cref="T:Microsoft.SemanticKernel.Text.SseJsonParser"/> instead.<br/>
            This class is thread-safe.
            </remarks>
        </member>
        <member name="M:Microsoft.SemanticKernel.Text.StreamJsonParser.ParseAsync(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Parses a Stream containing JSON data and yields the individual JSON objects.
            </summary>
            <param name="stream">The Stream containing the JSON data.</param>
            <param name="validateJson">Set to true to enable checking json chunks are well-formed. Default is false.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>An enumerable collection of string representing the individual JSON objects.</returns>
            <remarks>Stream will be disposed after parsing.</remarks>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.MistralAIServiceCollectionExtensions">
            <summary>
            Extension methods for adding MistralAI embedding generator to a service collection.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.MistralAIServiceCollectionExtensions.AddMistralEmbeddingGenerator(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String,System.Uri,System.String,System.Net.Http.HttpClient)">
            <summary>
            Adds a MistralAI embedding generator service to the service collection.
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance to augment.</param>
            <param name="modelId">The name of the MistralAI modelId.</param>
            <param name="apiKey">The API key required for accessing the MistralAI service.</param>
            <param name="endpoint">Optional uri endpoint including the port where MistralAI server is hosted. Default is https://api.mistral.ai.</param>
            <param name="serviceId">A local identifier for the given AI service.</param>
            <param name="httpClient">The HttpClient to use with this service.</param>
            <returns>The same instance as <paramref name="services"/>.</returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.EmptyKeyedServiceProvider">
            <summary>Provides an implementation of <see cref="T:Microsoft.Extensions.DependencyInjection.IKeyedServiceProvider"/> that contains no services.</summary>
        </member>
        <member name="P:Microsoft.Extensions.DependencyInjection.EmptyKeyedServiceProvider.Instance">
            <summary>Gets a singleton instance of <see cref="T:Microsoft.Extensions.DependencyInjection.EmptyKeyedServiceProvider"/>.</summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.EmptyKeyedServiceProvider.GetService(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.EmptyKeyedServiceProvider.GetKeyedService(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.EmptyKeyedServiceProvider.GetRequiredKeyedService(System.Type,System.Object)">
            <inheritdoc />
        </member>
        <member name="T:Microsoft.Extensions.VectorData.VectorStoreErrorHandler">
            <summary>
            Contains helpers for reading vector store model properties and their attributes.
            </summary>
        </member>
        <member name="T:System.ExceptionExtensions">
            <summary>
            Exception extension methods.
            </summary>
        </member>
        <member name="M:System.ExceptionExtensions.IsCriticalException(System.Exception)">
            <summary>
            Check if an exception is of a type that should not be caught by the kernel.
            </summary>
            <param name="ex">Exception.</param>
            <returns>True if <paramref name="ex"/> is a critical exception and should not be caught.</returns>
        </member>
        <member name="M:System.Linq.AsyncEnumerable.AnyAsync``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Determines whether any element of an async-enumerable sequence satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements in the source sequence.</typeparam>
            <param name="source">An async-enumerable sequence whose elements to apply the predicate to.</param>
            <param name="predicate">A function to test each element for a condition.</param>
            <param name="cancellationToken">The optional cancellation token to be used for cancelling the sequence at any time.</param>
            <returns>An async-enumerable sequence containing a single element determining whether any elements in the source sequence pass the test in the specified predicate.</returns>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
        </member>
        <member name="M:System.Linq.AsyncEnumerable.AnyAsync``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Determines whether any element of an async-enumerable sequence satisfies a condition.
            </summary>
            <typeparam name="TSource">The type of the elements in the source sequence.</typeparam>
            <param name="source">An async-enumerable sequence whose elements to apply the predicate to.</param>
            <param name="cancellationToken">The optional cancellation token to be used for cancelling the sequence at any time.</param>
            <returns>An async-enumerable sequence containing a single element determining whether any elements in the source sequence pass the test in the specified predicate.</returns>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
        </member>
        <member name="M:System.Linq.AsyncEnumerable.Select``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Projects each element of an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> into a new form by incorporating
            an asynchronous transformation function.
            </summary>
            <typeparam name="TSource">The type of the elements of the source sequence.</typeparam>
            <typeparam name="TResult">The type of the elements of the resulting sequence.</typeparam>
            <param name="source">An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> to invoke a transform function on.</param>
            <param name="selector">
            A transform function to apply to each element. This function takes an element of
            type TSource and returns an element of type TResult.
            </param>
            <param name="cancellationToken">
            A CancellationToken to observe while iterating through the sequence.
            </param>
            <returns>
            An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> whose elements are the result of invoking the transform
            function on each element of the original sequence.
            </returns>
            <exception cref="T:System.ArgumentNullException">Thrown when the source or selector is null.</exception>
        </member>
        <member name="M:System.Linq.AsyncEnumerable.OrderBy``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,``1})">
            <summary>Sorts the elements of a sequence in ascending order.</summary>
            <typeparam name="TSource">The type of the elements of <paramref name="source"/>.</typeparam>
            <typeparam name="TKey">The type of the key returned by <paramref name="keySelector"/>.</typeparam>
            <param name="source">A sequence of values to order.</param>
            <param name="keySelector">A function to extract a key from an element.</param>
            <returns>An <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> whose elements are sorted according to a key.</returns>
        </member>
        <member name="M:System.Linq.AsyncEnumerable.ToArrayAsync``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Threading.CancellationToken)">
            <summary>
            Creates an array from an async-enumerable sequence.
            </summary>
            <typeparam name="TSource">The type of the elements in the source sequence.</typeparam>
            <param name="source">The source async-enumerable sequence to get an array of elements for.</param>
            <param name="cancellationToken">The optional cancellation token to be used for cancelling the sequence at any time.</param>
            <returns>An async-enumerable sequence containing a single element with an array containing all the elements of the source sequence.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null.</exception>
            <remarks>The return type of this operator differs from the corresponding operator on IEnumerable in order to retain asynchronous behavior.</remarks>
        </member>
        <member name="M:System.Linq.AsyncEnumerable.Where``1(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Filters the elements of an async-enumerable sequence based on a predicate.
            </summary>
            <typeparam name="TSource">The type of the elements in the source sequence.</typeparam>
            <param name="source">An async-enumerable sequence whose elements to filter.</param>
            <param name="predicate">A function to test each source element for a condition.</param>
            <returns>An async-enumerable sequence that contains elements from the input sequence that satisfy the condition.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> or <paramref name="predicate"/> is null.</exception>
        </member>
        <member name="M:System.EnvExtensions.GetBoolEnvVar(System.String)">
            <summary>
            Source: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/src/DiagnosticsOptions.cs
            Values: https://learn.microsoft.com/en-us/dotnet/api/azure.core.diagnosticsoptions.istelemetryenabled?view=azure-dotnet
            </summary>
        </member>
        <member name="T:System.TypeExtensions">
            <summary>
            Extensions methods for <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:System.TypeExtensions.TryGetGenericResultType(System.Type,System.Type@)">
            <summary>
            Tries to get the result type from a generic parameter.
            </summary>
            <param name="returnType">Return type.</param>
            <param name="resultType">The result type of the Nullable generic parameter.</param>
            <returns><c>true</c> if the result type was successfully retrieved; otherwise, <c>false</c>.</returns>
            TODO [@teresaqhoang]: Issue #4202 Cache Generic Types Extraction - Handlebars
        </member>
        <member name="M:System.TypeExtensions.GetFriendlyTypeName(System.Type)">
            <summary>
            Returns a string with the type's name. If the type is generic, it also includes the type parameters in a readable format.
            </summary>
            <param name="type">Target type.</param>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the AsciiLettersDigitsUnderscoresRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AsciiLettersDigitsUnderscoresRegex_0.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the AllowedPluginNameSymbolsRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.AllowedPluginNameSymbolsRegex_1.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.FilenameRegex_2">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the FilenameRegex method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.FilenameRegex_2.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.FilenameRegex_2.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.FilenameRegex_2.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.FilenameRegex_2.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.FilenameRegex_2.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.FilenameRegex_2.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.FilenameRegex_2.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.FilenameRegex_2.RunnerFactory.Runner.TryMatchAtCurrentPosition(System.ReadOnlySpan{System.Char})">
            <summary>Determine whether <paramref name="inputSpan"/> at base.runtextpos is a match for the regular expression.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if the regular expression matches at the current position; otherwise, false.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_asciiWordChars">
            <summary>Supports searching for characters in or not in "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_20FF03FEFFFF87FEFFFF07">
            <summary>Supports searching for characters in or not in "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".</summary>
        </member>
    </members>
</doc>
